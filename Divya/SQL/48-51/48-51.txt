******PART 48*******
#Script to create the View
Create view vWEmployeeCount
as
Select DeptName, DepartmentId, COUNT(*) as TotalEmployees
from tblEmployee
join tblDepartment
on tblEmployee.DepartmentId = tblDepartment.DeptId
group by DeptName, DepartmentId

#Query using the view:
Select DeptName, TotalEmployees 
from vWEmployeeCount
where  TotalEmployees >= 2

#to achieve the same using, temporary tables
Select DeptName, DepartmentId, COUNT(*) as TotalEmployees
into #TempEmployeeCount
from tblEmployee
join tblDepartment
on tblEmployee.DepartmentId = tblDepartment.DeptId
group by DeptName, DepartmentId

Select DeptName, TotalEmployees
From #TempEmployeeCount
where TotalEmployees >= 2

Drop Table #TempEmployeeCount

#Using Table Variable:
Declare @tblEmployeeCount table
(DeptName nvarchar(20),DepartmentId int, TotalEmployees int)

Insert @tblEmployeeCount
Select DeptName, DepartmentId, COUNT(*) as TotalEmployees
from tblEmployee
join tblDepartment
on tblEmployee.DepartmentId = tblDepartment.DeptId
group by DeptName, DepartmentId

Select DeptName, TotalEmployees
From @tblEmployeeCount
where  TotalEmployees >= 2

#Using Derived Tables
Select DeptName, TotalEmployees
from 
 (
  Select DeptName, DepartmentId, COUNT(*) as TotalEmployees
  from tblEmployee
  join tblDepartment
  on tblEmployee.DepartmentId = tblDepartment.DeptId
  group by DeptName, DepartmentId
 ) 
as EmployeeCount
where TotalEmployees >= 2

#Using CTE
With EmployeeCount(DeptName, DepartmentId, TotalEmployees)
as
(
 Select DeptName, DepartmentId, COUNT(*) as TotalEmployees
 from tblEmployee
 join tblDepartment
 on tblEmployee.DepartmentId = tblDepartment.DeptId
 group by DeptName, DepartmentId
)

Select DeptName, TotalEmployees
from EmployeeCount
where TotalEmployees >= 2

********PART 49*******
#Before we write the query, let's look at the syntax for creating a CTE.
#WITH cte_name (Column1, Column2, ..)
#AS
#( CTE_query )
#SQL query using CTE:
With EmployeeCount(DepartmentId, TotalEmployees)
as
(
 Select DepartmentId, COUNT(*) as TotalEmployees
 from tblEmployee
 group by DepartmentId
)

Select DeptName, TotalEmployees
from tblDepartment
join EmployeeCount
on tblDepartment.DeptId = EmployeeCount.DepartmentId
order by TotalEmployees


With EmployeeCount(DepartmentId, TotalEmployees)
as
(
 Select DepartmentId, COUNT(*) as TotalEmployees
 from tblEmployee
 group by DepartmentId
)

Select 'Hello'

Select DeptName, TotalEmployees
from tblDepartment
join EmployeeCount
on tblDepartment.DeptId = EmployeeCount.DepartmentId
order by TotalEmployees

#It is also, possible to create multiple CTE's using a single WITH clause.
With EmployeesCountBy_Payroll_IT_Dept(DepartmentName, Total)
as
(
 Select DeptName, COUNT(Id) as TotalEmployees
 from tblEmployee
 join tblDepartment 
 on tblEmployee.DepartmentId = tblDepartment.DeptId
 where DeptName IN ('Payroll','IT')
 group by DeptName
),
EmployeesCountBy_HR_Admin_Dept(DepartmentName, Total)
as
(
 Select DeptName, COUNT(Id) as TotalEmployees
 from tblEmployee
 join tblDepartment 
 on tblEmployee.DepartmentId = tblDepartment.DeptId
 group by DeptName 
)
Select * from EmployeesCountBy_HR_Admin_Dept 
UNION
Select * from EmployeesCountBy_Payroll_IT_Dept

********PART 50********
#Let's create a simple common table expression, based on tblEmployee table. Employees_Name_Gender CTE is getting all the required columns from one base table tblEmployee.
With Employees_Name_Gender
as
(
 Select Id, Name, Gender from tblEmployee
)
Select * from Employees_Name_Gender

#Let's now, UPDATE JOHN's gender from Male to Female, using the Employees_Name_Gender CTE
With Employees_Name_Gender
as
(
 Select Id, Name, Gender from tblEmployee
)
Update Employees_Name_Gender Set Gender = 'Female' where Id = 1


#CTE, that returns Employees by Department
With EmployeesByDepartment
as
(
 Select Id, Name, Gender, DeptName 
 from tblEmployee
 join tblDepartment
 on tblDepartment.DeptId = tblEmployee.DepartmentId
)
Select * from EmployeesByDepartment

# update this CTE
With EmployeesByDepartment
as
(
 Select Id, Name, Gender, DeptName 
 from tblEmployee
 join tblDepartment
 on tblDepartment.DeptId = tblEmployee.DepartmentId
)
Update EmployeesByDepartment set Gender = 'Male' where Id = 1

#####
With EmployeesByDepartment
as
(
 Select Id, Name, Gender, DeptName 
 from tblEmployee
 join tblDepartment
 on tblDepartment.DeptId = tblEmployee.DepartmentId
)
Update EmployeesByDepartment set 
Gender = 'Female', DeptName = 'IT'
where Id = 1

 #UPDATE just the DeptName
With EmployeesByDepartment
as
(
 Select Id, Name, Gender, DeptName 
 from tblEmployee
 join tblDepartment
 on tblDepartment.DeptId = tblEmployee.DepartmentId
)
Update EmployeesByDepartment set 
DeptName = 'IT' where Id = 1

********PART 51*******
Create Table tblWorker
(
  WorkerId int Primary key,
  Name nvarchar(20),
  ManagerId int
)

Insert into tblWorker values (1, 'Tom', 2)
Insert into tblWorker values (2, 'Josh', null)
Insert into tblWorker values (3, 'Mike', 2)
Insert into tblWorker values (4, 'John', 3)
Insert into tblWorker values (5, 'Pam', 1)
Insert into tblWorker values (6, 'Mary', 3)
Insert into tblWorker values (7, 'James', 1)
Insert into tblWorker values (8, 'Sam', 5)
Insert into tblWorker values (9, 'Simon', 1)

#SELF JOIN QUERY:
Select Worker.Name as [Worker Name],
IsNull(Manager.Name, 'Super Boss') as [Manager Name]
from tblWorker Worker
left join tblWorker Manager
on Worker.ManagerId = Manager.WorkerId

#We can easily achieve this using a self referencing CTE.
With
  WorkerCTE (WorkerId, Name, ManagerId, [Level])
  as
  (
    Select WorkerId, Name, ManagerId, 1
    from tblWorker
    where ManagerId is null
    
    union all
    
    Select tblWorker.WorkerId, tblWorker.Name, 
    tblWorker.ManagerId, WorkerCTE.[Level] + 1
    from tblWorker
    join WorkerCTE
    on tblWorker.ManagerID = WorkerCTE.WorkerId
  )
Select WorCTE.Name as Worker, Isnull(MgrCTE.Name, 'Super Boss') as Manager, 
WorCTE.[Level] 
from WorkerCTE WorCTE
left join WorkerCTE MgrCTE
on WorCTE.ManagerId = MgrCTE.WorkerId